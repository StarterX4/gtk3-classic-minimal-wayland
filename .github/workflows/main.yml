name: CI

on: [push, pull_request]

jobs:
  build:
    # Perform a generic build in case of any critical errors
    name: Build
    runs-on: ubuntu-20.04
    steps:
    # Checks out under $GITHUB_WORKSPACE
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get GTK Version
      run: |
        source PKGBUILD
        echo "GTK_VERSION=${_gtkver}" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        echo "deb-src http://gb.archive.ubuntu.com/ubuntu/ focal main" | sudo tee -a /etc/apt/sources.list
        sudo apt-get update
        sudo apt-get build-dep gtk+3.0
        sudo apt-get install quilt sassc meson ninja-build cmake
        sudo apt-get install libgif-dev libelf-dev

    - name: Cache GTK Source
      uses: actions/cache@v2
      id: gtksrc
      with:
        path: 'gtk+*.tar.xz'
        key: gtk-${{ env.GTK_VERSION }}

    - name: Download GTK Source
      if: steps.gtksrc.outputs.cache-hit != 'true'
      run: |
        source PKGBUILD
        wget https://download.gnome.org/sources/gtk+/${pkgver%.*}/gtk+-${_gtkver}.tar.xz

    - name: Extract GTK Source
      run: |
        source PKGBUILD
        tar -xJf gtk+*.tar.xz

    # Uses PKGBUILD prepare() directly
    - name: Apply Patches
      run: |
        source PKGBUILD
        srcdir="$(pwd)"
        prepare

    # Based on PKGBUILD build()
    # Build system may connect to GNOME's GitLab to retrieve glib dependency
    - name: Build
      run: |
        source PKGBUILD
        CFLAGS+=" -DG_ENABLE_DEBUG -DG_DISABLE_CAST_CHECKS"
        meson gtk+-${_gtkver} build \
            -D broadway_backend=true \
            -D colord=no \
            -D demos=true \
            -D examples=false \
            -D tests=false \
            -D installed_tests=false
        ninja -C build

  makepkg:
    # Create artifacts for the Arch packages for convenient testing, and to
    # validate the package integrity with changes.
    name: 'Package / Arch'
    runs-on: ubuntu-latest
    steps:
    # Checks out under $GITHUB_WORKSPACE
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get GTK Version
      run: |
        source PKGBUILD
        echo "GTK_VERSION=${_gtkver}" >> $GITHUB_ENV

    - name: Cache Pacman Packages
      uses: actions/cache@v2
      env:
        cache-name: pacman-cache
      with:
        path: ~/pacman-cache
        key: pacman-cache

    - name: Cache GTK Source
      uses: actions/cache@v2
      id: gtksrc
      with:
        path: 'gtk+*.tar.xz'
        key: gtk-${{ env.GTK_VERSION }}

    - name: Build Arch Package
      run: |
        mkdir -p ~/pacman-cache
        # makepkg cannot run as root
        sudo chown -R nobody .

        docker run -d -t -v ~/pacman-cache/pkg:/var/cache/pacman/pkg -v $GITHUB_WORKSPACE:/workspace --name archlinux archlinux:base-devel
        docker exec archlinux /bin/bash -c "echo 'nobody ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers"
        docker exec archlinux /bin/bash -c "echo -e '\n[multilib]\nInclude = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf"
        docker exec archlinux pacman -Syu --noconfirm

        docker exec --workdir=/workspace --user nobody archlinux makepkg -s --noconfirm

        docker stop archlinux -t 1
        docker rm archlinux

    - name: 'Upload Artifact: gtk3-classic'
      uses: actions/upload-artifact@v2
      with:
        name: gtk3-classic-run${{github.run_number}}-pkg
        path: gtk3-classic-*.pkg*

    - name: 'Upload Artifact: lib32-gtk3-classic'
      uses: actions/upload-artifact@v2
      with:
        name: lib32-gtk3-classic-run${{github.run_number}}-pkg
        path: lib32-gtk3-classic-*.pkg*
