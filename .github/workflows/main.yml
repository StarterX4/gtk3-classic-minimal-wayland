name: gtk4

on: [workflow_dispatch]
#on: [push, pull_request]

jobs:
  makepkg:
    # Create artifacts for the Arch packages for convenient testing, and to
    # validate the package integrity with changes.
    name: 'Package / Arch'
    runs-on: ubuntu-latest
    steps:
    # Checks out under $GITHUB_WORKSPACE
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Ccache for gh actions
        # You may pin to the exact commit or the version.
        # uses: hendrikmuhs/ccache-action@ed038da2f2f09b0c8387c00e1498290a4808da2e
      uses: hendrikmuhs/ccache-action@v1.2.2
        #with:
          # An additional key for the cache
          #key: # optional
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          #restore-keys: # optional
          # Max size of the cache
          #max-size: # optional, default is 500M
          # Verbosity level: 0 (default), 1 or 2. Ignore for sccache.
          #verbose: # optional, default is 0
          # Ccache variant to use. Either "ccache" (the default) or "sccache" (see https://github.com/mozilla/sccache)
          #variant: # optional, default is ccache
          # If 'false', do not save the cache, only restore.
          #save: # optional, default is true

    - name: Get GTK Version
      run: |
        source PKGBUILD
        echo "GTK_VERSION=${_gtkver}" >> $GITHUB_ENV
        echo "PATH=/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH" >> $GITHUB_ENV

    - name: Cache Pacman Packages
      uses: actions/cache@v2
      env:
        cache-name: pacman-cache
      with:
        path: ~/pacman-cache
        key: pacman-cache

    - name: Cache GTK Source
      uses: actions/cache@v2
      id: gtksrc
      with:
        path: 'gtk*.tar.xz'
        key: gtk-${{ env.GTK_VERSION }}

    - name: Generate Checksum
      run: |
        cp PKGBUILD PKGBUILD.before
        md5sum PKGBUILD >> PKGBUILD.md5

    - name: Start Arch Linux
      run: |
        # Start and update Arch Linux within a Docker container
        docker run --privileged -d -t -v ~/pacman-cache/pkg:/var/cache/pacman/pkg -v $GITHUB_WORKSPACE:/workspace --name archlinux archlinux:base-devel
        docker exec archlinux pacman -Sy --noconfirm namcap

        # Add user
        docker exec archlinux useradd builder
        docker exec archlinux /bin/bash -c "echo 'builder ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers"
        docker exec archlinux chown -R builder /workspace

        # Enable 32-bit lib support
        docker exec archlinux /bin/bash -c "echo -e '\n[multilib]\nInclude = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf"
        docker exec archlinux pacman -Syu --noconfirm

    - name: Validate Package
      run: |
        # Validate the PKGBUILD is the same and free from errors
        docker exec --workdir=/workspace --user builder archlinux makepkg --geninteg
        docker exec --workdir=/workspace --user builder archlinux namcap -i PKGBUILD

    - name: Build Arch Package
      run: |
        docker exec --workdir=/workspace --user builder archlinux makepkg -s --noconfirm

    - name: Stop Arch Linux
      run: |
        docker stop archlinux -t 1
        docker rm archlinux

    - name: Verify Checksum
      run: |
        echo "If this fails, the PKGBUILD needs updating"
        diff PKGBUILD.before PKGBUILD
        md5sum -c PKGBUILD.md5

    - name: 'Upload Artifact: gtk4-minimal'
      uses: actions/upload-artifact@v2
      with:
        name: gtk4-minimal-run${{github.run_number}}-pkg
        path: gtk4-minimal-*.pkg*

    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: gtk4-minimal-run${{github.run_number}}
          release_name: ${{ steps.create_tag.outputs.tag }}
          draft: true
          prerelease: false
         
    - name: Upload built pkg
      uses: actions/upload-release-asset@v1.0.1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: gtk4-minimal-4.7.1-100-x86_64.pkg.tar.zst
         asset_name: gtk4-minimal-4.7.1-100-run${{github.run_number}}.pkg.tar.zst
         asset_content_type: application/zstd
         
    - name: Publish
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          release_id: ${{ steps.create_release.outputs.id }}
